<!--
    Example of a classical FPGA soft logic block with
    N = 10, K = 4, I = 22, O = 10
    BLEs consisting of a single LUT followed by a flip-flop that can be bypassed
-->
<architecture>

    <models>
    </models>

    <layout>
        <fixed_layout name="grid_layout" width="4" height="4">
            <single type="io" priority="20" x="1" y="3"/>
            <single type="io" priority="20" x="1" y="0"/>
            <single type="io2" priority="20" x="0" y="1"/>
            <single type="io2" priority="20" x="3" y="1"/>
            <single type="clb_l" priority="20" x="1" y="1"/>
            <single type="clb_l" priority="20" x="1" y="2"/>
            <single type="clb_r" priority="20" x="2" y="1"/>
            <single type="clb_r" priority="20" x="2" y="2"/>
        </fixed_layout>
    </layout>
    <device>

        <sizing R_minW_nmos="8926" R_minW_pmos="16067"/>
        <!-- The grid_logic_tile_area below will be used for all blocks that do not explicitly set their own (non-routing)
        area; set to 0 since we explicitly set the area of all blocks currently in this architecture file.
        -->
        <area grid_logic_tile_area="0"/>
        <chan_width_distr>
            <x distr="uniform" peak="1.000000"/>
            <y distr="uniform" peak="1.000000"/>
        </chan_width_distr>
        <switch_block type="custom" fs="3"/>
        <connection_block input_switch_name="wire_conn"/>
    </device>
    <switchlist>
        <switch type="tristate" name="wire_conn" R="94.841003" Cin="1.537000e-14" Cout="2.194000e-13" Tdel="6.562000e-11"/>
    </switchlist>
    <switchblocklist>
      <switchblock name="disjoint_edge" type="bidir">
        <switchblock_location type="FRINGE"/>
        <switchfuncs>
          <func type="bt" formula="t"/>
          <func type="br" formula="t"/>
          <func type="bl" formula="t"/>
          <func type="rt" formula="t"/>
          <func type="rl" formula="t"/>
          <func type="rt" formula="t"/>
          <func type="lt" formula="t"/>
        </switchfuncs>
        <wireconn num_conns_type="max" from_type="short_seg" to_type="short_seg" from_switchpoint="0" to_switchpoint="0"/>
      </switchblock>
      <switchblock name="disjoint_core" type="bidir">
        <switchblock_location type="CORE"/>
        <switchfuncs>
          <func type="bt" formula="t"/>
          <func type="br" formula="t"/>
          <func type="bl" formula="t"/>
          <func type="rt" formula="t"/>
          <func type="rl" formula="t"/>
          <func type="rt" formula="t"/>
          <func type="lt" formula="t"/>
        </switchfuncs>
        <wireconn num_conns_type="max" from_type="short_seg" to_type="short_seg" from_switchpoint="0" to_switchpoint="0"/>
      </switchblock>
    </switchblocklist>
    <segmentlist>
        <segment name="short_seg" freq="1.000000" length="1" type="bidir" Rmetal="11.064550" Cmetal="4.727860e-14">
          <wire_switch name="wire_conn"/>
          <opin_switch name="wire_conn"/>
          <sb type="pattern">1 1</sb>
          <cb type="pattern">1</cb>
        </segment>
    </segmentlist>
    <complexblocklist>
        <pb_type name="io2" capacity="5" area="0" height="2">
          <input name="outpad" num_pins="1"/>
          <output name="inpad" num_pins="1"/>

          <mode name="inpad">
            <pb_type name="inpad" blif_model=".input" num_pb="1">
              <output name="inpad" num_pins="1"/>
            </pb_type>
            <interconnect>
                <direct name="inpad" input="inpad.inpad" output="io2.inpad"/>
            </interconnect>

          </mode>
          <mode name="outpad">
            <pb_type name="outpad" blif_model=".output" num_pb="1">
              <input name="outpad" num_pins="1"/>
            </pb_type>
            <interconnect>
                <direct name="outpad" input="io2.outpad" output="outpad.outpad"/>
            </interconnect>
          </mode>

          <!-- Every input pin is driven by 15% of the tracks in a channel, every output pin is driven by 10% of the tracks in a channel -->
          <fc in_type="frac" in_val="0.15" out_type="frac" out_val="0.10"/>

          <!-- IOs go on the periphery of the FPGA, for consistency, 
              make it physically equivalent on all sides so that only one definition of I/Os is needed.
              If I do not make a physically equivalent definition, then I need to define 4 different I/Os, one for each side of the FPGA
            -->
          <pinlocations pattern="custom">
            <loc side="left">io2.outpad io2.inpad</loc>
            <loc side="right">io2.outpad io2.inpad</loc>
          </pinlocations>

          <!-- Place I/Os on the sides of the FPGA -->
          <power method="ignore"/>
        </pb_type>
        <pb_type name="io" capacity="5" area="0" width="2">
          <input name="outpad" num_pins="1"/>
          <output name="inpad" num_pins="1"/>

          <mode name="inpad">
            <pb_type name="inpad" blif_model=".input" num_pb="1">
              <output name="inpad" num_pins="1"/>
            </pb_type>
            <interconnect>
                <direct name="inpad" input="inpad.inpad" output="io.inpad"/>
            </interconnect>

          </mode>
          <mode name="outpad">
            <pb_type name="outpad" blif_model=".output" num_pb="1">
              <input name="outpad" num_pins="1"/>
            </pb_type>
            <interconnect>
                <direct name="outpad" input="io.outpad" output="outpad.outpad"/>
            </interconnect>
          </mode>

          <!-- Every input pin is driven by 15% of the tracks in a channel, every output pin is driven by 10% of the tracks in a channel -->
          <fc in_type="frac" in_val="1" out_type="frac" out_val="1"/>

          <!-- IOs go on the periphery of the FPGA, for consistency, 
              make it physically equivalent on all sides so that only one definition of I/Os is needed.
              If I do not make a physically equivalent definition, then I need to define 4 different I/Os, one for each side of the FPGA
            -->
          <pinlocations pattern="custom">
            <loc side="top">io.outpad io.inpad</loc>
            <loc side="bottom">io.outpad io.inpad</loc>
          </pinlocations>

          <!-- Place I/Os on the sides of the FPGA -->
          <power method="ignore"/>
        </pb_type>
        <pb_type name="clb_l">
            <input name="I" num_pins="11" equivalent="true"/>
            <output name="O" num_pins="5" equivalent="true"/>
            <clock name="clk" num_pins="1" equivalent="false"/>

            <pb_type name="ble" num_pb="5">
                <input name="in" num_pins="4"/>
                <output name="out" num_pins="1"/>
                <clock name="clk" num_pins="1"/>

                <pb_type name="lut_4" blif_model=".names" num_pb="1" class="lut">
                    <input name="in" num_pins="4" port_class="lut_in"/>
                    <output name="out" num_pins="1" port_class="lut_out"/>
                    <delay_matrix type="max" in_port="lut_4.in" out_port="lut_4.out">
                        261e-12 261e-12 261e-12 261e-12
                    </delay_matrix>
                </pb_type>
                <pb_type name="ff" blif_model=".latch" num_pb="1" class="flipflop">
                  <input name="D" num_pins="1" port_class="D"/>
                  <output name="Q" num_pins="1" port_class="Q"/>
                  <clock name="clk" num_pins="1" port_class="clock"/>
                  <T_setup value="66e-12" port="ff.D" clock="clk"/>
                  <T_clock_to_Q max="124e-12" port="ff.Q" clock="clk"/>
                </pb_type>

                <interconnect>
                    <direct name="data_conn" input="lut_4.out" output="ff.D"/>
                    <direct name="in_conn" input="ble.in" output="lut_4.in"/>
                    <mux name="sel_mux" input="ff.Q lut_4.out" output="ble.out">
                        <delay_constant max="25e-12" in_port="lut_4.out" out_port="ble.out"/>
                        <delay_constant max="45e-12" in_port="ff.Q" out_port="ble.out"/>
                    </mux>
                    <!-- .sdn -->
                    <direct name="ff_clk" input="ble.clk" output="ff.clk"/>
                </interconnect>
            </pb_type>

            <interconnect>
                <complete name="input_conn" input="{clb_l.I ble[4:0].out}" output="ble[4:0].in"/>
                <complete name="output_conn" input="clb_l.clk" output="ble[4:0].clk"/>
                <direct name="out_conn" input="ble[4:0].out" output="clb_l.O"/>
            </interconnect>

            <!-- Describe complex block relation with FPGA -->
            <fc in_type="frac" in_val="1" out_type="frac" out_val="1"/>

            <pinlocations pattern="custom">
                <loc side="top">clb_l.clk</loc>
                <loc side="left">clb_l.O</loc>
                <loc side="right">clb_l.I</loc>
            </pinlocations>
        </pb_type>
        <pb_type name="clb_r">
            <input name="I" num_pins="11" equivalent="true"/>
            <output name="O" num_pins="5" equivalent="true"/>
            <clock name="clk" num_pins="1" equivalent="false"/>

            <pb_type name="ble" num_pb="5">
                <input name="in" num_pins="4"/>
                <output name="out" num_pins="1"/>
                <clock name="clk" num_pins="1"/>

                <pb_type name="lut_4" blif_model=".names" num_pb="1" class="lut">
                    <input name="in" num_pins="4" port_class="lut_in"/>
                    <output name="out" num_pins="1" port_class="lut_out"/>
                    <delay_matrix type="max" in_port="lut_4.in" out_port="lut_4.out">
                        261e-12 261e-12 261e-12 261e-12
                    </delay_matrix>
                </pb_type>
                <pb_type name="ff" blif_model=".latch" num_pb="1" class="flipflop">
                  <input name="D" num_pins="1" port_class="D"/>
                  <output name="Q" num_pins="1" port_class="Q"/>
                  <clock name="clk" num_pins="1" port_class="clock"/>
                  <T_setup value="66e-12" port="ff.D" clock="clk"/>
                  <T_clock_to_Q max="124e-12" port="ff.Q" clock="clk"/>
                </pb_type>

                <interconnect>
                    <direct name="data_conn" input="lut_4.out" output="ff.D"/>
                    <direct name="in_conn" input="ble.in" output="lut_4.in"/>
                    <mux name="sel_mux" input="ff.Q lut_4.out" output="ble.out">
                        <delay_constant max="25e-12" in_port="lut_4.out" out_port="ble.out"/>
                        <delay_constant max="45e-12" in_port="ff.Q" out_port="ble.out"/>
                    </mux>
                    <!-- .sdn -->
                    <direct name="ff_clk" input="ble.clk" output="ff.clk"/>
                </interconnect>
            </pb_type>

            <interconnect>
                <complete name="input_conn" input="{clb_r.I ble[4:0].out}" output="ble[4:0].in"/>
                <complete name="output_conn" input="clb_r.clk" output="ble[4:0].clk"/>
                <direct name="out_conn" input="ble[4:0].out" output="clb_r.O"/>
            </interconnect>

            <!-- Describe complex block relation with FPGA -->
            <fc in_type="frac" in_val="1" out_type="frac" out_val="1"/>

            <pinlocations pattern="custom">
                <loc side="top">clb_r.clk</loc>
                <loc side="left">clb_r.I</loc>
                <loc side="right">clb_r.O</loc>
            </pinlocations>
        </pb_type>
    </complexblocklist>
</architecture>

